'use client';

import React, { useEffect, useState } from 'react';

import { Provider } from 'react-redux';

import { Box, IconButton, ThemeProvider, createTheme } from '@mui/material';
import Brightness4Icon from '@mui/icons-material/Brightness4';
import Brightness7Icon from '@mui/icons-material/Brightness7';

import { store } from '@/store/store';

import './globals.css';

const metadata = {
  title: 'Trello',
  description: 'Generated by create next app',
}

export default function App({
  children,
}: {
  children: React.ReactNode
}) {
  const [darkMode, setDarkMode] = useState(false);

  useEffect(() => {
    if (typeof window !== 'undefined') {
      const mode = localStorage.getItem('darkMode') === 'true';
      setDarkMode(mode);
    }
  }, []);

  const toggleTheme = () => {
    setDarkMode((prevMode) => {
      const newMode = !prevMode;
      if (typeof window !== 'undefined') {
        localStorage.setItem('darkMode', newMode.toString());
      }
      return newMode;
    });
  };

  const regionClassName = darkMode ? 'region-dark' : 'region-light';

  const theme = createTheme({
    palette: {
      mode: darkMode ? 'dark' : 'light',
    },
  });

  return (
    <html lang='ru'>
      <head>
        <title>{metadata.title}</title>
      </head>
      <body>
        <Provider store={store}>
          <Box className={regionClassName}>
            <ThemeProvider theme={theme}>
              <Box
                sx={{
                  display: 'flex',
                  width: '95%',
                  height: '15px',
                  alignItems: 'center',
                  justifyContent: 'end',
                  color: 'text.primary',
                  borderRadius: 1,
                  p: 3,
                }}
              >
              {theme.palette.mode} mode
                <IconButton 
                  sx={{ 
                    ml: 1 
                  }} 
                  onClick={toggleTheme} 
                  color='inherit'
                >
                  {darkMode ? <Brightness7Icon /> : <Brightness4Icon />}
                </IconButton>
              </Box>
              <main>
                {children}
              </main>
            </ThemeProvider>
          </Box>
        </Provider>
      </body>
    </html>
  )
}